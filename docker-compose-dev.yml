version: '2'
services:
  rcgech1:
    build:
      context: ./horodateur_api
      dockerfile: Dockerfile_dev
    environment:
      - WS_URI=https://rinkeby.infura.io/v3/3915211d82c546beaf5336b3c9b9b99a
      - PRIVATE_KEY=87ED42E2AFCF878D1DAA2183AA23F32023F31D377D431BD005207A24B2ACD93A
      - DB_DSN=host=postgres user=tsUhfmkMfY dbname=rcgehorodatage sslmode=disable password=lrwOuiz4gH
      - LOCKED_ADDR=0x88AB30749e745A66262275e0489373D3E0781E74
      - ERROR_THRESHOLD=0.1
      - WARNING_THRESHOLD=1
      - http_proxy=http://squid.forward:3128
      - https_proxy=http://squid.forward:3128
    links:
      - postgres
    command: bash -c "go get github.com/pilu/fresh && fresh"
    depends_on:
      - squid.forward
    volumes:
      - ./horodateur_api:/go/src/github.com/geneva_horodateur/

  rcgech2:
    build:
      context: ./horodateur_api
      dockerfile: Dockerfile_dev
    environment:
      - WS_URI=https://rinkeby.infura.io/v3/3915211d82c546beaf5336b3c9b9b99a
      - PRIVATE_KEY=87ED42E2AFCF878D1DAA2183AA23F32023F31D377D431BD005207A24B2ACD93A
      - DB_DSN=host=postgres user=tsUhfmkMfY dbname=rcgehorodatage sslmode=disable password=lrwOuiz4gH
      - LOCKED_ADDR=0x88AB30749e745A66262275e0489373D3E0781E74
      - ERROR_THRESHOLD=0.1
      - WARNING_THRESHOLD=1
      - http_proxy=http://squid.forward:3128
      - https_proxy=http://squid.forward:3128
    links:
      - postgres
    command: bash -c "go get github.com/pilu/fresh && fresh"
    depends_on:
      - squid.forward
    volumes:
      - ./horodateur_api:/go/src/github.com/geneva_horodateur/

  webapp1:
    build:
      context: ./horodateur_webapp
    environment:
      - KEY_NAME=myservice # The .cert and .key must have the same name
      - IDP_METADATA=http://ec2-18-184-234-216.eu-central-1.compute.amazonaws.com/ssorec.geneveid.ch_dgsi_blockchain.xml #Public URL where IdP can be found
      - SP_URL=http://ec2-18-184-234-216.eu-central-1.compute.amazonaws.com:8001 # URL of the service provider
      - API_HOST=rcgech1:8090 # API host, is equal to the <api container name>:<port>
      - MAIN_URI=ctihorodateur
      - CSRF_TIME_LIMIT=360
    working_dir: /app
    command: /app/webapp
    volumes:
      - "./myservice.cert:/app/myservice.cert"
      - "./myservice.key:/app/myservice.key"

  webapp2:
    build:
      context: ./horodateur_webapp
    environment:
      - KEY_NAME=myservice # The .cert and .key must have the same name
      - IDP_METADATA=http://ec2-18-184-234-216.eu-central-1.compute.amazonaws.com/ssorec.geneveid.ch_dgsi_blockchain.xml #Public URL where IdP can be found
      - SP_URL=http://ec2-18-184-234-216.eu-central-1.compute.amazonaws.com:8001 # URL of the service provider
      - API_HOST=rcgech2:8090 # API host, is equal to the <api container name>:<port>
      - MAIN_URI=ctihorodateur
      - CSRF_TIME_LIMIT=360
    working_dir: /app
    command: /app/webapp
    volumes:
      - "./myservice.cert:/app/myservice.cert"
      - "./myservice.key:/app/myservice.key"

  postgres:
    image: postgres:9.5
    user: postgres
    environment:
      - POSTGRES_USER=tsUhfmkMfY
      - POSTGRES_PASSWORD=lrwOuiz4gH
      - POSTGRES_DB=rcgehorodatage

  nginx.balancer:
    image: nginx
    container_name: nginx.balancer
    links:
      - webapp1
      - webapp2
    volumes:
      - "./nginx/nginx-balancer.conf:/etc/nginx/nginx.conf"
    ports:
      - "0.0.0.0:8001:8080"

  squid.forward:
    image: wernight/squid
    container_name: squid.forward
    restart: always
